[section MM_CLASS_MULTI]

[h3 Synopsis]

MM_CLASS_MULTI(__class__, __bases__...)

[h3 Description]

Same as [link methods.reference.registering_classes.mm_class MM_CLASS], to be used
in presence of *repeated* inheritance of class __selector__.

`MM_CLASS_MULTI` should not be used if __class__ inherits (virtually)
the same __selector__ sub-object via different inheritance paths.

[h3 Examples]

``

struct Satellite : selector {
  MM_CLASS(Satellite);
};

struct Displayable : selector {
  MM_CLASS(Displayable);
};

struct DisplayableSatellite {
  MM_CLASS_MULTI(DisplayableSatellite, Satellite, Displayable);
};

``

[h3 Implementation notes]

`MM_CLASS_MULTI` expands to:

``
  MM_CLASS(CLASS, BASE, BASES);                                         \
  std::vector<detail::offset>* _get_mm_ptbl() const { return BASE::_mm_ptbl; }
``

`_get_mm_ptbl` returns a pointer to a vector of offsets into
multi-method dispatch tables, contained in inherited class
__selector__. This is exactly what the same function in __selector__ does,
and returning the table from one of the __selector__ sub-objects or the
other does not matter. Re-implementing it in the class merely lifts
the ambiguity that would otherwise be reported during compilation.

[endsect]
